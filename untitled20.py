# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rhKe_uYNnh0sWymLCJFIeIl02k03J_zd

#Implement any two symmetric encryption algorithms using Python.

1.Caesar Cipher-The Caesar cipher is a symmetric encryption algorithm which is a kind of replacement (substitution) cipher, where all letters of plain text is replaced by another letter.

Working

Encryption:
1.Enter the plain text.

2.For each character in the plain text:
* Convert the character into its corresponding ASCII value.
*Shift the value to left by 3 places.
* Convert the value back into corresponding character.

Decryption:

1.Enter cipher text.

2.For each character in the cipher text:
* Convert the character into its corresponding ASCII value.
*Shift the value to left by 3 places.
* Convert the value back into corresponding character.
"""

#caesar cipher

def encryption():
    string=""
    for char in plain:
        ascii = ord(char)
        new_ascii=ascii+3
        new_character=chr(new_ascii)
        string=string+new_character
    return string

def decryption():
    string=""
    for char in cipher_text:
        ascii = ord(char)
        new_ascii=ascii-3
        new_character=chr(new_ascii)
        string=string+new_character
    return string


plain=input("Enter the plain text:")
cipher_text=encryption()
print("Encrypted text:",cipher_text)
plain_text=decryption()
print("Decrypted text:",plain_text)

"""2.Vignere Cipher:
The Vigen√®re cipher is a method of encrypting messages by using a series of different Caesar ciphers based on the letters of a particular keyword.

Working

Encrption:
1.Take a plaintext and key as input.

2.For each character in the plaintext:

* Check if the character is an alphabet.
*  Calculate the shift based on the character's position and the corresponding key character.
*Encrypt the character using the Caesar cipher algorithm.
* Append the encrypted character to the ciphertext.

3.Return the ciphertext.


Decryption:

1.Take a ciphertext and  key as input.

2.For each character in the ciphertext:

* Check if the character is an alphabet.
*  Calculate the shift based on the character's position and the corresponding key character.
*Decrypt the character using the Caesar cipher algorithm.
* Append the decrypted character to the plaintext.

3.Return the plaintext.


"""

#vignere cipher

def encrypt(plain_text,key):
    cipher_text=""
    for i in range(len(plain_text)):
        char = plain_text[i]
        if char.isalpha():
            if char.isupper():
                start=ord('A')
            else:
                start=ord('a')
            key = key[i % len(key)]
            encrypted_char = chr((ord(char) - start+ ord(key)) % 26 + start)
            cipher_text= cipher_text + encrypted_char
    return cipher_text


def decrypt(cipher_text,key):
    plain_text = ""
    for i in range(len(cipher_text)):
        char = cipher_text[i]
        if char.isalpha():
            if char.isupper():
                start=ord('A')
            else:
                start=ord('a')
            key = key[i % len(key)]
            decrypted_char = chr((ord(char) - start - ord(key)) % 26 + start)
            plain_text=plain_text + decrypted_char
    return plain_text
text=input("Enter the plain text:")
key =input("Enter the key:")
cipher_text = encrypt(text,key)
decrypted_text= decrypt(cipher_text,key)
print("Encrypted text:",cipher_text)
print("Decrypted text:",decrypted_text)